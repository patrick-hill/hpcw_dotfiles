#!/usr/bin/env bash
# This file is intented to be read for every new terminal

# Exports
export DROPBOX_DIR="${HOME}/Dropbox"
export RCSBACKUP_DIR="${DROPBOX_DIR}/0-Backups/rcs_mac"
export SRC_DIR="${HOME}/src"
export VAGRANT_DIR="${SRC_DIR}/rcs/rcs_vagrant_projects"
export PUPPET_DIR="${SRC_DIR}/rcs/rcsdev_puppet_labs"
export SALT_DIR="${SRC_DIR}/hpcw/hpcw_salt_projects"
export VM_DIR="${HOME}/VMs"
export MACENV_DIR="${SRC_DIR}/hpcw/hpcw_mac_env"
export SCRIPTS_DIR="${MACENV_DIR}/scripts"
export PATH="$PATH:${SCRIPTS_DIR}"

# Source actual profile
for file in ${MACENV_DIR}/{bash_profile}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done

# Autocorrect typos in path names when using `cd`
shopt -s cdspell;

# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
	complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

#!/usr/bin/env bash
# Exports
export VAGRANT_DEFAULT_PROVIDER=vmware_fusion
export PATH="$PATH:/Library/Application Support/VMware Fusion"
export PATH="$PATH:/Applications/VMware Fusion.app/Contents/Library"

#### Navigation Shortcuts
alias cdprofile="func_cd ${MACENV_DIR}"
alias cdscripts="func_cd ${SCRIPTS_DIR}"
alias cdsrc="func_cd ${SRC_DIR}"
alias cdvagrant="func_cd ${VAGRANT_DIR}"
alias cdpup="func_cd ${PUPPET_DIR}"
alias cdvm="func_cd ${VM_DIR}"
alias cdsalt="func_cd ${SALT_DIR}"
alias cdans="func_cd ${SRC_DIR}/hpcw_ansible_projects"
alias cddb="func_cd ${DROPBOX_DIR}"
alias cdd="func_cd ~/Documents"
alias cddl="func_cd ~/Downloads"

#### Bash Profile Shortcuts
alias src='source ~/.bash_profile'
alias editenv="code ${MACENV_DIR}/"
alias editprofile="code ${MACENV_DIR}/.bash_init"
alias editprovision="code ${MACENV_DIR}/provision.sh"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi
#### Shortcuts
# Show history
alias h='history'
# List all files colorized in long format
alias l="ls -lF ${colorflag}"
# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"
# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"
# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
# Enable aliases to be sudo’ed
alias sudo='sudo '
# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
# Get OS X Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade --all; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update'
# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"
# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"
# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""
# Trim new lines and copy to clipboard
alias copy="tr -d '\n' | pbcopy"
# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"
# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"
# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
# Show line numbers
alias catn='cat -n'
# Make and cd to dir
alias mdir=func_mdir
func_mdir() {
  mkdir -p "$@" && cd "$_"
}
# Display the current directory path and its contents every time you clear the screen
alias c='clear && pwd && l'
# Only send 4 ping requests, then stop
alias ping='ping -c 4'
# Confirm when deleting files, use -f to override
alias rm='rm -i'
# Confirm when overwriting files
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'
# Become root
alias root='sudo su - root'
# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}
# Use Git’s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;
#### Inter-Web Findings
alias date='date +%d-%b-%Y'
alias ..='cd ..'
alias ports='netstat -tulanp'
alias backup=func_backup
func_backup() {
  cp $1{,.bak}
}
alias diff=func_diff
func_diff() {
  diff $1{.bak,}
}

# Used for all 'cd' aliases
func_cd() {
  cd $1 && c
}

#### Applicaiton Aliases
alias code='open -a Visual\ Studio\ Code'
alias stree='open /Applications/SourceTree.app'

#### Git
alias g='git'
alias gs='git status'
alias ga='git add'
alias ga.='git add .'
alias gc='git commit'
alias gp='git push'

#### Installers VM
alias startinstallers="vmrun -T fusion start ${VM_DIR}/installers.vmwarevm nogui"
alias stopinstallers="vmrun -T fusion stop ${VM_DIR}/installers.vmwarevm"
alias syncvm=func_installer_sync
func_installer_sync() {
  echo "Starting, ssh'ing & syncing installers..."
  startinstallers && ssh -o ConnectionAttempts=3 -o ConnectTimeout=60 oracle@installers "/var/www/installers/public_html/rcs/rsync_installers.sh pull"
  if [ ! $# -eq 0 ]; then
    echo "Stopping installers vm..."
    stopinstallers
  fi
  echo "Done"
}

#### BoxCutter Alaises
alias packcentos=func_packcentos
func_packcentos() {
  packer build -only=virtualbox-iso -var-file=${1} centos.json
}

#### Puppet Project
alias ppush="${SRC_DIR}/rcs_base_box_helpers/setup.sh"

#### Vagrant
alias vup='vagrant up'
alias vupv='vagrant up --provider=virtualbox'
alias vdown='vagrant halt'
alias vr='vagrant reload'
alias vdes='vagrant destroy -f'
alias vs='vagrant ssh'
alias vstat='vagrant status'
alias vpro='vagrant provision'
alias vclean='vagrant global-status --prune'
alias vpl='vagrant plugin list'
alias vsnap='vagrant snap take'
alias vslist='vagrant snap list'
alias vroll='vagrant snap rollback'
# alias vbl='vagrant box list'
alias vbl=func_vbl
func_vbl() {
  if [ -z $1 ];then
    vagrant box list
  else  
    vagrant box list | grep $1
  fi
}
alias vba=func_vba
func_vba() {
  for val in $@
  do
    vagrant box add $val $val
  done
}
alias vbr=func_vbr
func_vbr() {
  for val in $@
  do
    vagrant box remove -f $val
  done
}
alias vbu=func_vbu
func_vbu() {
  for val in $@
  do
    vbr $val
    vba $val
  done
}
alias vfswap=func_vfswap
func_vfswap() {
  if [ -f Vagrantfile ]; then
  # if [ -f Vagrantfile ] && [ -f Vagrantfile_pup3 ] && [ -f Vagrantfile_pup4 ]; then
    rm -f Vagrantfile.bak
    cp Vagrantfile Vagrantfile.bak
    rm -f Vagrantfile
  fi
  cp  "Vagrantfile_pup$1" Vagrantfile
}

# Brew & Brew Cask
alias bu='brew update'
alias bi='brew install'
alias blist="echo 'Brew Installs:' && brew list && echo 'Brew Cask Installs:' && brew cask list"
alias bs='brew search'
alias bci='brew cask install'
alias bcs='brew cask search'

#### Ruby Badassness
# Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
